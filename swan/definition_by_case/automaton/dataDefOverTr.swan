node dataDefOverTr(unlock:bool; u:bool; d:bool; l:bool;r:bool)
returns (x: int32 last = 0; y: int32 last = 0)
{
let x,y: automaton
  initial state Stop:
  unless if (unlock) 
        if (u) {let y = last 'y + 1;} resume Up
        elsif (d) { let y = last 'y - 1;} resume Down
        elsif (l) { let x = last 'x - 1;} resume Left
        elsif (r) { let x = last 'x + 1;} resume Right 
        end;
  
  state Up:
  unless if (u) { let y = last 'y + 1;} resume Up;
  resume Stop;
  
  state Down:
  unless if (d) { let y = last 'y - 1;} resume Down;
  resume Stop;
  
  state Left:
  unless if (l) { let x = last 'x - 1;} resume Left;
  resume Stop;
  
  state Right:
  unless if (r) { let x = last 'x + 1;} resume Right;
  resume Stop;
;
}